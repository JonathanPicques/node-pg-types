name: CI

on: [push, pull_request]

permissions:
  contents: read

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn
      - run: yarn install # --frozen-lockfile TODO get this option working
      - run: yarn lint
  test-js:
    timeout-minutes: 10
    needs: lint
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
          POSTGRES_HOST_AUTH_METHOD: 'md5'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        node:
          # - '10' dropped support due to error postgres-array@3.0.2: The engine "node" is incompatible with this module. Expected version ">=12". Got "10.24.1"
          - '12'
          - '14'
          - '16'
          - '18'
          - '20'
        os:
          - ubuntu-latest
    name: Test JavaScript - Node.js ${{ matrix.node }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
        PGUSER: postgres
        PGHOST: localhost
        PGPASSWORD: postgres
        PGDATABASE: ci_db_test
        PGTESTNOSSL: 'true'
        SCRAM_TEST_PGUSER: scram_test
        SCRAM_TEST_PGPASSWORD: test4scram
        TEST_SKIP_NATIVE: ${{ matrix.node == 20 }}
    steps:
      - name: Show OS
        run: |
          uname -a
      - run: |
          psql \
            -c "SET password_encryption = 'scram-sha-256'" \
            -c "CREATE ROLE scram_test LOGIN PASSWORD 'test4scram'"
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - run: yarn install # --frozen-lockfile TODO get this option working
      - run: yarn test
  test-ts:
    timeout-minutes: 10
    needs: lint
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
          POSTGRES_HOST_AUTH_METHOD: 'md5'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        node:
          - '10'
          - '12'
          - '14'
          - '16'
          - '18'
          - '20'
        os:
          - ubuntu-latest
    name: Test TypeScript - Node.js ${{ matrix.node }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
        PGUSER: postgres
        PGHOST: localhost
        PGPASSWORD: postgres
        PGDATABASE: ci_db_test
        PGTESTNOSSL: 'true'
        SCRAM_TEST_PGUSER: scram_test
        SCRAM_TEST_PGPASSWORD: test4scram
        TEST_SKIP_NATIVE: ${{ matrix.node == 20 }}
    steps:
      - name: Show OS
        run: |
          uname -a
      - run: |
          psql \
            -c "SET password_encryption = 'scram-sha-256'" \
            -c "CREATE ROLE scram_test LOGIN PASSWORD 'test4scram'"
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - run: yarn install # --frozen-lockfile TODO get this option working
      - run: yarn test-ts
